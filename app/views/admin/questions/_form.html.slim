- content_for :tex_title do
  = Question.human_attribute_name(:image)

.container
  = render "shared/errors_base", object: question

.container
  .col-11
    = simple_form_for [:admin, question] do |f|
      .container.question-form.p-4
        .container
          .row
            /出題年
            .col-sm-3
              = f.input :year, collection: 1980..Time.current.year, include_blank: false

            / 大学名
            .col-sm-9
              label
                = University.human_attribute_name(:name)

              / 大学名ドロップダウンボタン
              .university-radio-buttons.container.ps-0
                .row
                  .col-6.d-grid.gap-2
                    button[type="button" class="btn btn-outline-dark dropdown-toggle" data-bs-toggle="dropdown" data-bs-auto-close="outside" id="dropdownMenuClickableInside"]
                      = question.university.name if question.university.present?
                    / 大学名ドロップダウンメニュー（ラジオボタン ）
                    .container.dropdown-menu.p-3
                      - University.categories.keys.each do |category|
                        label.form-label
                          = University.categories_i18n[category]
                        small.row.ms-2.row-cols-auto
                          = f.collection_radio_buttons "university", University.where(category: category).pluck(:name, :id), :last, :first, item_wrapper_tag: :div, item_wrapper_class: 'form-check col px-0' do |b|
                            = b.label(class: 'form-check-label')
                              .dropdown-item
                                = b.radio_button(class: 'form-check-input', data: { departments_path: "#{admin_university_department_check_boxes_path(b.value)}" })
                                = b.text
                  / フォームの後ろの「大学」
                  .col.ps-0.my-auto
                    = University.model_name.human

        .py-3

        / 区分
        .container
          .row
            label.form-label
              = Department.model_name.human
          .form-control.p-3[style="min-height: 4rem"]
            / 区分名チェックボックス
            - checkbox_departments = question.university.blank? ? [] : question.university.departments.includes(:questions_departments_mediators)
            .department-check-box-group
              = f.collection_check_boxes :department_ids, checkbox_departments, :id, :name, item_wrapper_tag: nil do |b|
                .d-flex.align-items-center class="department#{b.object.id}-question-number-group"
                  .form-check.py-3
                    = b.check_box(class: 'form-check-input')
                    = b.label(class: 'form-check-label')
                  / 問題番号selectボックス
                  = f.simple_fields_for "department[questions_departments_mediator]", b.object.questions_departments_mediators.find{|x| x.question_id == f.object.id}, index: b.object.id do |qdm_f|
                    - if qdm_f.object.present?
                      .question-number-selectbox.d-flex
                        .ms-4
                          = qdm_f.label :question_number, label: QuestionsDepartmentsMediator.human_attribute_name(:question_number),class: "col-form-label"
                        .ms-2
                          = qdm_f.input :question_number, label:false, wrapper:false, as: :select, collection: 1..20, input_html: {class: "form-control"}


        .py-3

        / 単元
        .container
          .row
            label.form-label
              = Unit.model_name.human
          / 単元チェックボックス
          .form-control
            .unit-check-box-group.p-3
              / subujectごとにunitのチェックボックスを表示する
              = render "/shared/units/units_checkboxes", f: f

        .py-3

        /tex
        .container
          label.form-group
            = Question.human_attribute_name(:image)

          .py-1

          = render "texes/form", {f: f, tex: question.tex || Tex.new }

      .py-3

      / 送信ボタン
      = f.button :submit, class: "btn-outline-dark", data: { disable_with: t(".saving")}
