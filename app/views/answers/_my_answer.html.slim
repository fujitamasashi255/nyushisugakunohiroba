/ カード部分
.col-md-6.my-answer
    .container.p-4
      .row.d-flex.justify-content-center.p-1
        .col-12.answer-card.border.mb-4.d-flex.flex-column
          / カードの上部分
          .answer-card-top.d-flex
            = link_to answer_path(answer), class: "d-block flex-grow-1 py-1" do
              / 大学名
              .univ-name-year-info.d-flex.flex-row.align-items-center
                div
                  = answer.question_year
                  = t("common.year")
                div.ms-1
                  = answer.question.university_name
                  = University.model_name.human
              / 区分一覧
              .row.department-info
                small.d-flex
                  = render "shared/departments/departments", questions_departments_mediators: answer.question.questions_departments_mediators

            / 大学名横アイコン
            .right-icons
              .d-flex.align-items-center
                / 解答編集ページへの戻るアイコン
                .me-2
                  = link_to edit_answer_path(answer) do
                    i.bi.bi-pencil data-bs-toggle="tooltip" data-bs-placement="bottom" title=t(".edit")
                / 問題削除アイコン
                .me-2
                  = link_to answer_path(answer), method: :delete, data: { confirm: t("messages.delete_confirm") } do
                    i.bi.bi-trash data-bs-toggle="tooltip" data-bs-placement="bottom" title=t(".destroy")
                / 問題詳細ページへのリンクアイコン
                div
                  = link_to question_path(answer.question) do
                    i.bi.bi-card-text data-bs-toggle="tooltip" data-bs-placement="bottom" title=t(".to_question")
          = link_to answer_path(answer), class: "d-block flex-grow-1" do
            .created-at
              label.me-3
                = Answer.human_attribute_name(:updated_at)
              = l(answer.updated_at, format: :short)

            .py-1

            / タグ
            .tags
              - if answer.tags.present?
                  label.d-block
                    = Answer.human_attribute_name(:tag_list)
                  - answer.tags.each do |tag|
                    span.d-inline-block.tag
                      = tag.name
              - else
                label.me-3
                  = Answer.human_attribute_name(:tag_list)
                | なし

            .py-1

            / ポイント
            .point-container
              - if answer.point.present?
                label.d-block
                  = Answer.human_attribute_name(:point)
                .p-2.point
                  == answer.point
              - else
                label.me-3
                  = Answer.human_attribute_name(:point)
                | なし

            .py-1

            / 問題文画像
            - if answer.question_image.attached?
              label.d-block
                = Question.human_attribute_name(:image)
              .question-body.border.question-image
                = image_tag answer.question_image_url(:index), class: "bg-white p-3 img-fluid", loading: "lazy"
              .py-1



