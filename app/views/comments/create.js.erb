var CommentForm = document.getElementById('commentField');

<% if @comment.errors.empty? %>
  var createComment = function(){
    // 「解答がありません」が表示されていれば削除
  const noCommentsElem = document.getElementById('no-comments');
  if(noCommentsElem){
    noCommentsElem.remove();
  }

    // コメントフォームを初期化
  CommentForm.innerHTML = "<%= j(render "comments/form", commentable: @commentable, comment: Comment.new) %>";

  // コメントを追加
  const addedComment = "<%= j(render "comments/comment", comment: @comment) %>";
  const commentsElem = document.getElementById('comments');
  commentsElem.insertAdjacentHTML('afterbegin', addedComment);
  // コメント一覧へスクロール
  commentsElem.scrollIntoView({behavior: "smooth"});
  }

  var compileComments = function(){
    MathJax.texReset([0]);
    const CommentBody = document.querySelectorAll("#comment_<%= @comment.id%> .comment-body");
    MathJax.typeset(CommentBody);
  }

  var displayComment = async function(){
    await createComment();
    compileComments();
  }

  displayComment();
<% else %>
  var oldErrorMessageContainer = CommentForm.querySelector(".error-message")
  if(oldErrorMessageContainer){ oldErrorMessageContainer.remove(); }
  var newErrorMessageContainer = document.createElement("div");
  newErrorMessageContainer.setAttribute('class', 'error-message ms-2');
  newErrorMessageContainer.innerHTML = "<%= @comment.errors.full_messages[0] %>";
  CommentForm.querySelector(".form-buttons").append(newErrorMessageContainer);
<% end %>
